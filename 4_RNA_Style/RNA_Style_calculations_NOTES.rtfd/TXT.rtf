{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Oblique;
\f3\froman\fcharset0 Times-Roman;\f4\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red34\green139\blue34;\red0\green0\blue233;}
{\*\expandedcolortbl;;\csgenericrgb\c13333\c54510\c13333;\cssrgb\c0\c0\c93333;}
\margl1440\margr1440\vieww17660\viewh18700\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 25 Nov., 2019\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \ul \ulc0 backtrack_paths_GridOverlap.m\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \ulnone Can we reconstruct paths from 2D traces? \
\
\pard\pardeftab720\partightenfactor0

\f1\fs20 \cf0 NITER = 50000;
\fs24 \

\fs20 sigma = 0.5;
\fs24 \

\fs20 theta0 = \cf2 2*pi/10; 
\fs24 \cf0 \

\fs20 dtheta = 2*pi/10;
\fs24 \

\fs20 dL = 0.1; 
\fs24 \

\fs20 L = 12.0;
\fs24 \

\fs20 n_max= 10;
\fs24 \

\fs20 use_mvksdensity = 1;
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0 \cf0 \
Histograms of 10-arm chain starting at origin, and with preferred direction 2*pi/10. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2019-11-26 at 3.57.17 PM.png \width14600 \height15600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
Pretty great convergence on grid-based C_eff:\
\
C_eff forward 1 reverse 9 ==> 0.089731\
C_eff forward 2 reverse 8 ==> 0.077645\
C_eff forward 3 reverse 7 ==> 0.081626\
C_eff forward 4 reverse 6 ==> 0.081957\
C_eff forward 5 reverse 5 ==> 0.083494\
C_eff forward 6 reverse 4 ==> 0.081046\
C_eff forward 7 reverse 3 ==> 0.077884\
C_eff forward 8 reverse 2 ==> 0.080511\
C_eff forward 9 reverse 1 ==> 0.101268\
\
\
Tried to use histograms to backtrack sample, but its too sparse in x,y,theta \'97 at n=5 or 6, path hits spots with zero intensity.\
Had to use KDE to do backtrack, but then it worked:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2019-11-26 at 4.00.09 PM.png \width6120 \height4840 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \ul What if we have theta0 = 0 \'97> closer to \'93actual\'94 RNA model.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2019-11-26 at 5.07.44 PM.png \width14080 \height15200 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Had to sample 4x the number of points to get reasonable chain closure (50,000 -> 200,000)\
\pard\pardeftab720\partightenfactor0

\f1\fs20 \cf2 % parameters
\fs24 \cf0 \

\fs20 NITER = 200000;
\fs24 \

\fs20 sigma = 0.5;
\fs24 \

\fs20 theta0 = 0; \cf2 %2*pi/10; 
\fs24 \cf0 \

\fs20 dtheta = 2*pi/10;
\fs24 \

\fs20 dL = 0.1; 
\fs24 \

\fs20 L = 12.0;
\fs24 \

\fs20 n_max= 10;
\fs24 \

\fs20 use_mvksdensity = 1;
\fs24 \
\
But sampled trajectories 
\f2\i do
\f1\i0  make sense \'97 (wobbly) circles in both directions.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2019-11-26 at 5.07.39 PM.png \width4740 \height5600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\'95 Will be cool to now rotate and translate these and generate new sample trajectories & C_eff\'92s, including base-pair like trajectories.\
\
\
\'95\'a0Tried circular KDE from internet library, but it failed on this edge case.\
\
\'95\'a0Good stress-test \'97> calculate 3-link system. Should be perfect equilateral. Its not \'97 but that appears due to major lack of statistics:\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2019-11-27 at 2.38.28 PM.png \width6560 \height11020 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2019-11-27 at 2.38.05 PM.png \width7440 \height11060 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
Similar issue with 4-arm, where answers should be perfect rhombuses \'97 slightly off:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2019-11-27 at 2.39.29 PM.png \width7500 \height10200 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\ul Before going to town on KDE, let\'92s do another sanity check \'97 can we estimate C_eff better with KDE than histogram?\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \ulnone From a \'91quick\'92 20,000-sample run for 10-links.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Histogram estimates are allover the place! Perhaps dangerously so.\
C_eff forward 1 reverse 9 [hist] ==> 0.000050\
C_eff forward 2 reverse 8 [hist] ==> 0.000007\
C_eff forward 3 reverse 7 [hist] ==> 0.000029\
C_eff forward 4 reverse 6 [hist] ==> 0.000087\
C_eff forward 5 reverse 5 [hist] ==> 0.000077\
C_eff forward 6 reverse 4 [hist] ==> 0.000103\
C_eff forward 7 reverse 3 [hist] ==> 0.000051\
C_eff forward 8 reverse 2 [hist] ==> 0.000085\
C_eff forward 9 reverse 1 [hist] ==> 0.000000\
\
KDE is reasonably fast (~1 sec per evaluation) \'97 and pretty consistent:\
C_eff forward 1 reverse 9 [KDE1] ==> 0.000099\
C_eff forward 1 reverse 9 [KDE2] ==> 0.000090\
C_eff forward 2 reverse 8 [KDE1] ==> 0.000084\
C_eff forward 2 reverse 8 [KDE2] ==> 0.000102\
C_eff forward 3 reverse 7 [KDE1] ==> 0.000089\
C_eff forward 3 reverse 7 [KDE2] ==> 0.000109\
C_eff forward 4 reverse 6 [KDE1] ==> 0.000093\
C_eff forward 4 reverse 6 [KDE2] ==> 0.000100\
C_eff forward 5 reverse 5 [KDE1] ==> 0.000095\
C_eff forward 5 reverse 5 [KDE2] ==> 0.000092\
C_eff forward 6 reverse 4 [KDE1] ==> 0.000128\
C_eff forward 6 reverse 4 [KDE2] ==> 0.000112\
C_eff forward 7 reverse 3 [KDE1] ==> 0.000092\
C_eff forward 7 reverse 3 [KDE2] ==> 0.000081\
C_eff forward 8 reverse 2 [KDE1] ==> 0.000170\
C_eff forward 8 reverse 2 [KDE2] ==> 0.000095\
C_eff forward 9 reverse 1 [KDE1] ==> NaN\
C_eff forward 9 reverse 1 [KDE2] ==> 0.000071\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Note that KDE1 evaluates pts_reverse-based KDE at pts_forward; KDE2 evaluates pts_forward-based KDE at pts_reverse. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Hmmm, try akde ({\field{\*\fldinst{HYPERLINK "https://www.mathworks.com/matlabcentral/fileexchange/58312-kernel-density-estimator-for-high-dimensions"}}{\fldrslt 
\f3 \cf3 \expnd0\expndtw0\kerning0
\ul \ulc3 https://www.mathworks.com/matlabcentral/fileexchange/58312-kernel-density-estimator-for-high-dimensions}})?\

\f4\i akde
\f0\i0  \'97> pretty bad!\
C_eff forward 1 reverse 9 [KDE1] ==> 0.000006\
C_eff forward 1 reverse 9 [KDE2] ==> 0.000038\
\'85\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Also tried something where we take slices in theta, and do KDE in x,y. Fast \'97 but pretty large variations:\
C_eff forward 1 reverse 9 [KDE1] ==> 0.000000\
C_eff forward 1 reverse 9 [KDE2] ==> 0.000903\
C_eff forward 2 reverse 8 [KDE1] ==> 0.007777\
C_eff forward 2 reverse 8 [KDE2] ==> 0.000896\
C_eff forward 3 reverse 7 [KDE1] ==> 0.007232\
C_eff forward 3 reverse 7 [KDE2] ==> 0.001719\
C_eff forward 4 reverse 6 [KDE1] ==> 0.014691\
C_eff forward 4 reverse 6 [KDE2] ==> 0.004399\
C_eff forward 5 reverse 5 [KDE1] ==> 0.007570\
C_eff forward 5 reverse 5 [KDE2] ==> 0.007572\
C_eff forward 6 reverse 4 [KDE1] ==> 0.005046\
C_eff forward 6 reverse 4 [KDE2] ==> 0.016909\
C_eff forward 7 reverse 3 [KDE1] ==> 0.001626\
C_eff forward 7 reverse 3 [KDE2] ==> 0.012113\
C_eff forward 8 reverse 2 [KDE1] ==> 0.001141\
C_eff forward 8 reverse 2 [KDE2] ==> 0.004967\
C_eff forward 9 reverse 1 [KDE1] ==> 0.000619\
C_eff forward 9 reverse 1 [KDE2] ==> NaN\
Seems important to tie information across theta.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 From a large 200,000-sample run for 10-links:\
Histogram estimate are more convergent (and fast for MATLAB to calculate) but still variable:\
C_eff forward 1 reverse 9 [hist] ==> 0.000109\
C_eff forward 2 reverse 8 [hist] ==> 0.000055\
C_eff forward 3 reverse 7 [hist] ==> 0.000056\
C_eff forward 4 reverse 6 [hist] ==> 0.000074\
C_eff forward 5 reverse 5 [hist] ==> 0.000070\
C_eff forward 6 reverse 4 [hist] ==> 0.000073\
C_eff forward 7 reverse 3 [hist] ==> 0.000110\
C_eff forward 8 reverse 2 [hist] ==> 0.000082\
C_eff forward 9 reverse 1 [hist] ==> 0.000000\
\
KDE estimate appear waaaay slower, maybe 100 seconds (So N^2?)\
\
C_eff forward 1 reverse 9 [KDE1] ==> 0.000045\
C_eff forward 1 reverse 9 [KDE2] ==> 0.000047\
C_eff forward 2 reverse 8 [KDE1] ==> 0.000045\
C_eff forward 2 reverse 8 [KDE2] ==> 0.000047\
C_eff forward 3 reverse 7 [KDE1] ==> 0.000035\
C_eff forward 3 reverse 7 [KDE2] ==> 0.000038\
C_eff forward 4 reverse 6 [KDE1] ==> 0.000042\
C_eff forward 4 reverse 6 [KDE2] ==> 0.000042\
C_eff forward 5 reverse 5 [KDE1] ==> 0.000043\
C_eff forward 5 reverse 5 [KDE2] ==> 0.000041\
\'85\
\
\
}